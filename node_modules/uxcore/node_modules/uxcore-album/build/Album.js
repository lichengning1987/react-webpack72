'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _transformDetect = require('./transform-detect');

var _rgbaDetect = require('./rgba-detect');

var _rgbaDetect2 = _interopRequireDefault(_rgbaDetect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Album Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author vincent.bian
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2015-2016, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var Album = function (_React$Component) {
  _inherits(Album, _React$Component);

  function Album(props) {
    _classCallCheck(this, Album);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      open: false,
      current: 0,
      left: 0
    };
    return _this;
  }

  Album.prototype.componentDidUpdate = function componentDidUpdate(props, state) {
    if (this.state.open && this.state.current !== state.current) {
      var itemWidth = 132;
      var viewWidth = this.refs.container.clientWidth;
      var activeOffset = this.state.current * itemWidth;
      var left = this.state.left;

      if (activeOffset < left) {
        left -= itemWidth;
      } else if (activeOffset - left > viewWidth - itemWidth) {
        left += itemWidth;
      }
      this.setState({
        left: left
      });
    }
  };

  Album.prototype.componentWillUnmount = function componentWillUnmount() {};

  Album.prototype.setCurrent = function setCurrent(i) {
    this.setState({
      current: i
    });
  };

  Album.prototype.prev = function prev() {
    var current = this.state.current;
    if (current === 0) return;
    this.setState({
      current: current - 1
    });
  };

  Album.prototype.next = function next() {
    var current = this.state.current;
    var children = this.props.children;

    if (!Array.isArray(children)) {
      children = [children];
    }
    if (current === children.length - 1) return;
    this.setState({
      current: current + 1
    });
  };

  Album.prototype.handleKeyboardEvent = function handleKeyboardEvent(e) {
    console.log(e.keyCode);
    switch (e.keyCode) {
      case 37:
        // left
        this.prev();
        break;
      case 39:
        // right
        this.next();
        break;
      case 27:
        // esc
        this.setState({
          open: false
        });
        break;
      default:
        break;
    }
  };

  Album.prototype.onKeyUp = function onKeyUp(e) {
    var enableKeyBoardControl = this.props.enableKeyBoardControl;
    var open = this.state.open;

    if (enableKeyBoardControl && open) {
      this.handleKeyboardEvent(e);
    }
  };

  Album.prototype.openAlbum = function openAlbum() {
    this.setState({
      open: true
    });
  };

  Album.prototype.renderCover = function renderCover() {
    var _props = this.props;
    var width = _props.width;
    var height = _props.height;
    var children = _props.children;

    var coverStyle = {};
    if (width) {
      coverStyle.width = width;
    }
    if (height) {
      coverStyle.height = height;
    }
    return _react2["default"].createElement(
      'div',
      { className: 'album-cover album-icon', onClick: this.openAlbum.bind(this), style: coverStyle, ref: 'cover' },
      _react2["default"].cloneElement(Array.isArray(children) ? children[0] : children)
    );
  };

  Album.prototype.renderAlbum = function renderAlbum() {
    var _this2 = this;

    var current = this.state.current;
    var children = this.props.children;

    if (!Array.isArray(children)) {
      children = [children];
    }
    return _react2["default"].createElement(
      'div',
      { className: 'album-overlay', ref: 'overlay' },
      _react2["default"].createElement('a', { href: '#', className: (0, _classnames2["default"])('album-control', 'album-icon', 'album-prev', {
          disabled: current === 0
        }), onClick: this.prev.bind(this) }),
      _react2["default"].createElement('a', { href: '#', className: (0, _classnames2["default"])('album-control', 'album-icon', 'album-next', {
          disabled: current === children.length - 1
        }), onClick: this.next.bind(this) }),
      _react2["default"].createElement(
        'div',
        { className: 'album-stage' },
        _react2["default"].cloneElement(children[this.state.current])
      ),
      this.renderCarousel(),
      _react2["default"].createElement('a', { href: 'javascript:;', className: 'album-close album-icon', onClick: function onClick() {
          _this2.setState({
            open: false
          });
        } })
    );
  };

  Album.prototype.renderCarousel = function renderCarousel() {
    var _this3 = this;

    var current = this.state.current;
    var children = this.props.children;

    if (!Array.isArray(children)) {
      children = [children];
    }
    var listStyle = {};
    if (_transformDetect.vendorSupport) {
      listStyle[_transformDetect.transformProperty] = 'translateX(-' + this.state.left + 'px)';
    } else {
      listStyle.left = '-' + this.state.left + 'px';
    }
    return _react2["default"].createElement(
      'div',
      { className: 'album-carousel' },
      _react2["default"].createElement('a', { href: '#', className: (0, _classnames2["default"])('album-carousel-control', 'album-icon', 'control-prev', {
          disabled: current === 0
        }), onClick: this.prev.bind(this) }),
      _react2["default"].createElement(
        'div',
        { className: 'album-carousel-container', ref: 'container' },
        _react2["default"].createElement(
          'ul',
          { className: 'album-carousel-list', style: listStyle },
          children.map(function (el, i) {
            return _react2["default"].createElement(
              'li',
              { className: current === i ? 'active' : '', key: 'c-' + i, onClick: _this3.setCurrent.bind(_this3, i) },
              _react2["default"].cloneElement(el)
            );
          })
        )
      ),
      _react2["default"].createElement('a', { href: '#', className: (0, _classnames2["default"])('album-carousel-control', 'album-icon', 'control-next', {
          disabled: current === children.length - 1
        }), onClick: this.next.bind(this) })
    );
  };

  Album.prototype.render = function render() {
    var open = this.state.open;

    var content = void 0;
    if (open) {
      content = this.renderAlbum();
    } else {
      content = this.renderCover();
    }
    return _react2["default"].createElement(
      'div',
      { className: (0, _classnames2["default"])('kuma-uxcore-album', {
          'no-rgba': !_rgbaDetect2["default"]
        }), onKeyUp: this.onKeyUp.bind(this), tabIndex: '-1' },
      content
    );
  };

  return Album;
}(_react2["default"].Component);

Album.defaultProps = {
  width: '',
  height: '',
  enableKeyBoardControl: true
};

// http://facebook.github.io/react/docs/reusable-components.html
Album.propTypes = {
  width: _react2["default"].PropTypes.number,
  height: _react2["default"].PropTypes.number,
  enableKeyBoardControl: _react2["default"].PropTypes.bool
};

Album.displayName = 'Album';

module.exports = Album;