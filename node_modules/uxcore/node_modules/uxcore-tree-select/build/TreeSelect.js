'use strict';

var _rcTreeSelect = require('rc-tree-select');

var _rcTreeSelect2 = _interopRequireDefault(_rcTreeSelect);

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * TreeSelect Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author biangang.bg
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2015, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var supportSVG = document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1");

function filterFn(input, child) {
    return String(getPropValue(child, labelCompatible(this.props.treeNodeFilterProp))).indexOf(input) > -1;
}

var TreeSelect = function (_RcTreeSelect) {
    _inherits(TreeSelect, _RcTreeSelect);

    function TreeSelect(props) {
        _classCallCheck(this, TreeSelect);

        return _possibleConstructorReturn(this, _RcTreeSelect.call(this, props));
    }

    return TreeSelect;
}(_rcTreeSelect2["default"]);

TreeSelect.displayName = 'TreeSelect';
TreeSelect.defaultProps = (0, _objectAssign2["default"])(_rcTreeSelect2["default"].defaultProps, {
    prefixCls: 'uxcore-tree-select',
    dropdownClassName: supportSVG ? 'use-svg' : 'no-svg',
    transitionName: 'uxcore-tree-select-dropdown-slide-up',
    choiceTransitionName: 'uxcore-tree-select-selection__choice-zoom',
    showSearch: false
});
TreeSelect.propTypes = _rcTreeSelect2["default"].propTypes;


module.exports = TreeSelect;