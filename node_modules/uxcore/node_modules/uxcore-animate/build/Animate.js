"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Animate Component for uxcore
 * @author eternalsky
 *
 * Copyright 2014-2015, Uxcore Team, Alinw.
 * All rights reserved.
 */

var RcAnimate = require('rc-animate');

var Animate = function (_RcAnimate) {
    _inherits(Animate, _RcAnimate);

    function Animate(props) {
        _classCallCheck(this, Animate);

        return _possibleConstructorReturn(this, _RcAnimate.call(this, props));
    }

    return Animate;
}(RcAnimate);

Animate.defaultProps = RcAnimate.defaultProps;

// http://facebook.github.io/react/docs/reusable-components.html
Animate.propTypes = RcAnimate.propTypes;

Animate.displayName = "Animate";

module.exports = Animate;