'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

/**
 * @author: zhouquan.yezq
 * @time : 8/12 2015
 */

var classnames = require("classnames");

var React = require('react');
var ReactDOM = require('react-dom');

var Mask = function (_React$Component) {
    _inherits(Mask, _React$Component);

    function Mask(props) {
        _classCallCheck(this, Mask);

        return _possibleConstructorReturn(this, _React$Component.call(this, props));
    }

    Mask.prototype.render = function render() {
        var _classnames;

        var props = this.props;
        var visible = props.visible;
        var text = props.text;
        var height = props.height;

        var className = classnames((_classnames = {}, _defineProperty(_classnames, props.prefixCls, true), _defineProperty(_classnames, props.prefixCls + "-hide", !visible), _classnames));
        return React.createElement(
            'div',
            { className: className },
            React.createElement(
                'div',
                { className: props.prefixCls + '-centerblk' },
                React.createElement('span', { className: 'kuma-loading' }),
                React.createElement(
                    'span',
                    { className: props.prefixCls + '-text' },
                    text
                )
            )
        );
    };

    return Mask;
}(React.Component);

Mask.propTypes = {
    prefixCls: React.PropTypes.string
};

Mask.defaultProps = {
    prefixCls: "kuma-uxmask",
    text: '加载中'
};

exports["default"] = Mask;
module.exports = exports['default'];