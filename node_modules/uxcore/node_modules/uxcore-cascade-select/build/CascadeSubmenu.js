'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

/**
* CascadeSelect Component for uxcore
* @author changming
*
* Copyright 2015-2016, Uxcore Team, Alinw.
* All rights reserved.
*/

var React = require('react');
var classnames = require('classnames');
var SuperComponent = require('./SuperComponent');

var CascadeSubmenu = function (_SuperComponent) {
  _inherits(CascadeSubmenu, _SuperComponent);

  function CascadeSubmenu() {
    _classCallCheck(this, CascadeSubmenu);

    return _possibleConstructorReturn(this, _SuperComponent.apply(this, arguments));
  }

  CascadeSubmenu.prototype.onItemClick = function onItemClick(item, groupIndex) {
    if (this.props.onItemClick) {
      this.props.onItemClick(item.value, groupIndex, item);
    }
  };

  CascadeSubmenu.prototype.onItemHover = function onItemHover(item, groupIndex) {
    clearTimeout(this.timeout);
    this.timeout = setTimeout(function () {
      if (this.props.onItemClick) {
        this.props.onItemClick(item.value, groupIndex, item);
      }
    }.bind(this), 400);
  };

  CascadeSubmenu.prototype.renderUlList = function renderUlList(data, key, groupIndex) {
    var _this2 = this;

    var expandTrigger = this.props.expandTrigger;

    return data.map(function (item) {
      var otherProps = {};
      if (expandTrigger === 'click') {
        otherProps.onClick = _this2.onItemClick.bind(_this2, item, groupIndex);
      } else if (expandTrigger === 'hover') {
        otherProps.onMouseOver = _this2.onItemHover.bind(_this2, item, groupIndex);
      }
      return React.createElement(
        'li',
        _extends({
          key: item.value,
          title: item.label,
          className: classnames({ active: item.value === key })
        }, otherProps),
        item.label
      );
    });
  };

  CascadeSubmenu.prototype.renderSubmenus = function renderSubmenus() {
    var _this3 = this;

    var _props = this.props;
    var value = _props.value;
    var options = _props.options;
    var expandTrigger = _props.expandTrigger;
    var cascadeSize = _props.cascadeSize;

    var submenu = [];
    submenu.push(React.createElement(
      'ul',
      {
        className: classnames(_defineProperty({}, this.prefixCls('hoverable'), expandTrigger === 'hover')),
        key: 'firstMenu'
      },
      this.renderUlList(options, value[0], 0)
    ));

    var prevSelected = null;
    value.forEach(function (key, index) {
      var renderArr = (prevSelected || options).find(function (item) {
        return item.value === key;
      }).children;
      prevSelected = renderArr;
      if (renderArr) {
        submenu.push(React.createElement(
          'ul',
          {
            key: key,
            className: classnames(_defineProperty({}, _this3.prefixCls('hoverable'), expandTrigger === 'hover' && index < cascadeSize - 1))
          },
          _this3.renderUlList(renderArr, value[index + 1], index + 1)
        ));
      }
    });
    return submenu;
  };

  CascadeSubmenu.prototype.render = function render() {
    return React.createElement(
      'div',
      { className: this.prefixCls('submenu') },
      React.createElement(
        'div',
        { className: this.prefixCls('submenu-wrap') },
        this.renderSubmenus()
      )
    );
  };

  return CascadeSubmenu;
}(SuperComponent);

CascadeSubmenu.propTypes = {
  prefixCls: React.PropTypes.string,
  onItemClick: React.PropTypes.func,
  value: React.PropTypes.array,
  options: React.PropTypes.array
};

CascadeSubmenu.defaultProps = {
  prefixCls: 'kuma-cascader',
  onItemClick: function onItemClick() {},
  value: [],
  options: []
};

exports["default"] = CascadeSubmenu;
module.exports = exports['default'];