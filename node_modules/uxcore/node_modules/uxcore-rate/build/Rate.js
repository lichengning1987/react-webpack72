'use strict';

var _classnames2 = require('classnames');

var _classnames3 = _interopRequireDefault(_classnames2);

var _uxcoreTooltip = require('uxcore-tooltip');

var _uxcoreTooltip2 = _interopRequireDefault(_uxcoreTooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Rate Component for uxcore
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @author quanyun.mqy
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright 2014-2015, Uxcore Team, Alinw.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * All rights reserved.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var Rate = function (_React$Component) {
  _inherits(Rate, _React$Component);

  function Rate(props) {
    _classCallCheck(this, Rate);

    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

    _this.state = {
      hover: props.value
    };
    return _this;
  }

  Rate.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
    if (nextProps.value !== this.props.value) {
      this.setState({
        hover: nextProps.value
      });
    }
  };

  Rate.prototype.handleItemHover = function handleItemHover(i) {
    if (this.props.disabled) {
      return;
    }

    this.setState({
      hover: i
    });
  };

  Rate.prototype.handleItemLeave = function handleItemLeave() {
    if (this.props.disabled) {
      return;
    }

    this.setState({
      hover: this.props.value
    });
  };

  Rate.prototype.handleItemClick = function handleItemClick(v, disabled) {
    if (this.props.disabled) {
      return;
    }

    this.props.onChange(v);
  };

  // when tipShow === 'always', render the tip


  Rate.prototype.renderAlwaysTip = function renderAlwaysTip() {
    var t = this;
    return React.createElement(
      'div',
      { className: t.props.prefixCls + '-always-tip-container' },
      t.state.hover === 0 ? '点击星星进行评分' : t.props.scoreTips[parseInt(t.state.hover) - 1]
    );
  };

  Rate.prototype.render = function render() {
    var _classnames;

    var t = this;
    var classes = (0, _classnames3["default"])(t.props.prefixCls, (_classnames = {}, _defineProperty(_classnames, t.props.className, !!t.props.className), _defineProperty(_classnames, 'disabled', !!t.props.disabled), _classnames));

    return React.createElement(
      'div',
      { className: classes, onMouseLeave: this.handleItemLeave.bind(this) },

      // 根据totalScore,造一个数组，仅用于执行map方法
      new Array(t.props.total).fill(1).map(function (v, k) {
        return React.createElement(
          'div',
          { className: (0, _classnames3["default"])(t.props.prefixCls + '-item', {
              'active': k + 1 <= t.state.hover
            }), key: k + 1, onClick: t.handleItemClick.bind(t, k + 1),
            onMouseEnter: t.handleItemHover.bind(t, k + 1) },
          t.props.tipShow === 'hover' && t.props.scoreTips[k] ? React.createElement(
            _uxcoreTooltip2["default"],
            { placement: 'top', trigger: 'hover', overlay: t.props.scoreTips[k] },
            React.createElement('i', { className: 'kuma-icon kuma-icon-wujiaoxing' })
          ) : React.createElement('i', { className: 'kuma-icon kuma-icon-wujiaoxing' })
        );
      }),
      t.props.tipShow === 'always' ? t.renderAlwaysTip() : ''
    );
  };

  return Rate;
}(React.Component);

Rate.defaultProps = {
  prefixCls: 'kuma-rate',
  disabled: false,
  total: 5,
  value: 0,
  scoreTips: [],
  tipShow: 'hover',
  onChange: function onChange() {}
};

// http://facebook.github.io/react/docs/reusable-components.html
Rate.propTypes = {
  /**
   * @title 类名前缀
   */
  prefixCls: React.PropTypes.string,
  /**
   * @title class
   * @description 自定义样式的class
   */
  className: React.PropTypes.string,
  /**
   * @title 是否禁用
   */
  disabled: React.PropTypes.bool,
  /**
   * @title icon个数
   * @description 总共有多少个icon,即总分为多少
   */
  total: React.PropTypes.number,
  /**
   * @title 初始值
   */
  value: React.PropTypes.number.isRequired,
  /**
   * @title tip
   * @description 每个star的描述文字，不传就不会显示tip。数组元素个数必须和totalScore一致
   */
  scoreTips: React.PropTypes.arrayOf(React.PropTypes.string),
  /**
   * @title tip的显示方式
   * @description 可选值:hover/always.hover:当hover的时候显示,always:总是显示在底部
   */
  tipShow: React.PropTypes.string,
  /**
   * @title 回调函数
   * @description 会返回选中的分数onChange(currentValue)，从1开始计数
   */
  onChange: React.PropTypes.func.isRequired
};

Rate.displayName = "uxcore-rate";

module.exports = Rate;