'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _keycode = require('../utils/keycode');

var _util = require('../utils/util');

require('../utils/rangy-position');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var BaseEditor = function (_React$Component) {
  _inherits(BaseEditor, _React$Component);

  function BaseEditor(props) {
    _classCallCheck(this, BaseEditor);

    return _possibleConstructorReturn(this, _React$Component.call(this, props));
  }

  BaseEditor.prototype.onFocus = function onFocus() {
    this.props.onFocus(this);
  };

  BaseEditor.prototype.onKeydown = function onKeydown(e) {
    var panelVisible = this.props.panelVisible;

    switch (e.keyCode) {
      case _keycode.KEYCODE.UP:
      case _keycode.KEYCODE.DOWN:
        if (panelVisible) {
          e.preventDefault();
        }
        break;
      case _keycode.KEYCODE.ENTER:
        if (panelVisible) {
          e.preventDefault();
        } else {
          this.handleEnterPress && this.handleEnterPress(e);
        }
        break;
      default:
        break;
    }
  };

  BaseEditor.prototype.onKeyup = function onKeyup(e) {
    var panelVisible = this.props.panelVisible;

    switch (e.keyCode) {
      case _keycode.KEYCODE.UP:
      case _keycode.KEYCODE.DOWN:
        if (panelVisible) {
          e.preventDefault();
        }
        break;
      case _keycode.KEYCODE.ENTER:
        break;
      default:
        this.handleDefaultKeyup && this.handleDefaultKeyup();
        break;
    }
  };

  BaseEditor.prototype.insertMentionData = function insertMentionData(mentionData) {
    var _props = this.props;
    var mentionFormatter = _props.mentionFormatter;
    var onAdd = _props.onAdd;

    var insertContent = mentionFormatter(mentionData);
    this.insert(insertContent);
    onAdd(insertContent, mentionData);
  };

  return BaseEditor;
}(_react2["default"].Component);

exports["default"] = BaseEditor;
module.exports = exports['default'];