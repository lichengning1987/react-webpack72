'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _baseEditor = require('./baseEditor');

var _baseEditor2 = _interopRequireDefault(_baseEditor);

var _util = require('../utils/util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var InputEditor = function (_BaseEditor) {
  _inherits(InputEditor, _BaseEditor);

  function InputEditor(props) {
    _classCallCheck(this, InputEditor);

    return _possibleConstructorReturn(this, _BaseEditor.call(this, props));
  }

  InputEditor.prototype.componentDidMount = function componentDidMount() {
    this.selectionPosition = {
      start: 0,
      end: 0
    };
  };

  InputEditor.prototype.handleDefaultKeyup = function handleDefaultKeyup() {
    var editor = this.refs.editor;
    var delimiter = this.props.delimiter;

    var offset = (0, _util.getCaretOffset)(editor);
    var value = editor.value;
    value = value.replace(/(\r\n)|\n|\r/g, '\n');
    var originStr = value.slice(0, offset.end);
    var str = (0, _util.parseStrByDelimiter)(originStr, delimiter);
    this.props.matcher(str);
    this.selectionPosition = {
      start: offset.start - str.length - 1,
      end: offset.end
    };
    if (str) {
      var position = (0, _util.getCaretPosition)(editor);
      this.props.setCursorPos({
        x: position.left,
        y: position.top
      });
    }
  };

  InputEditor.prototype.insert = function insert(mentionContent) {
    this.insertContentAtCaret(mentionContent);
  };

  InputEditor.prototype.insertContentAtCaret = function insertContentAtCaret(text) {
    var editor = this.refs.editor;

    if (document.selection) {
      editor.focus();
      if (editor.createTextRange) {
        var range = editor.createTextRange();
        range.collapse(true);
        range.moveStart('character', this.selectionPosition.start);
        range.moveEnd('character', this.selectionPosition.end - this.selectionPosition.start);
        range.text = text;
      } else if (editor.setSelectionRange) {
        editor.setSelectionRange(this.selectionPosition.start, this.selectionPosition.end);
      }
    } else {
      var scrollTop = editor.scrollTop;
      editor.value = editor.value.substring(0, this.selectionPosition.start) + text + editor.value.substring(this.selectionPosition.end, editor.value.length);
      editor.focus();
      editor.scrollTop = scrollTop;
    }
  };

  InputEditor.prototype.render = function render() {
    var _props = this.props;
    var readOnly = _props.readOnly;
    var placeholder = _props.placeholder;

    var style = {
      width: this.props.width,
      height: this.props.height
    };
    return _react2["default"].createElement(
      'div',
      { className: this.props.prefixCls },
      _react2["default"].createElement('input', {
        className: this.props.prefixCls + '-editor kuma-input',
        ref: 'editor',
        style: style,
        readOnly: readOnly,
        placeholder: placeholder,
        onKeyDown: this.onKeydown.bind(this),
        onKeyUp: this.onKeyup.bind(this),
        onFocus: this.onFocus.bind(this),
        defaultValue: this.props.defaultValue
      })
    );
  };

  return InputEditor;
}(_baseEditor2["default"]);

exports["default"] = InputEditor;

InputEditor.propType = {
  prefixCls: _react2["default"].PropTypes.string,
  width: _react2["default"].PropTypes.number,
  height: _react2["default"].PropTypes.number,
  placeholder: _react2["default"].PropTypes.string,
  mentionFormatter: _react2["default"].PropTypes.func,
  onChange: _react2["default"].PropTypes.func,
  onAdd: _react2["default"].PropTypes.func,
  defaultValue: _react2["default"].PropTypes.string,
  readOnly: _react2["default"].PropTypes.bool,
  delimiter: _react2["default"].PropTypes.string
};
InputEditor.defaultProps = {
  prefixCls: '',
  width: 200,
  height: 30,
  placeholder: '',
  mentionFormatter: function mentionFormatter(data) {
    return ' @' + data.text + ' ';
  },
  onChange: function onChange() {},
  onAdd: function onAdd() {},
  defaultValue: '',
  readOnly: false,
  delimiter: '@'
};
module.exports = exports['default'];